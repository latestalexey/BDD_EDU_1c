#use json
// Выгрузка / загрузка файлов из справочник ВнешниеОбработки в дерево каталогов
// для выгрузки текстов модулей встроенных объектов запускаем:
// http://infostart.ru/public/411063/
// Статья "Регистрация запуска обработок во внешнем источнике данных"
// "c:\Program Files (x86)\1cv8\8.3.6.2299"\bin\1cv8.exe config  /s kopt-app-01\mc_uat_tst /DumpConfigFiles unloads -Module 
// Еще статьи 
// Выгрузка/загрузка справочника "Внешние обработки". http://infostart.ru/public/177099/
// Как выгрузить все внешние обработки в файлы на диск. http://j008.ru/ps/119_export_ext_modules


Перем Настройки Экспорт;
Перем Скрипт;
Перем Версия;

Функция ОписанияДоступаКИнформационнымБазам();
КонецФункции

Процедура ПрочитатьНастройки()
	JSON = Новый ПарсерJSON();
	ФайлНастроек = Новый Файл(ТекущийСценарий().Источник).Путь+"\GSettings.js";
	ЧтениеТекста = Новый ЧтениеТекста(ФайлНастроек);
	
	СтрокаJSON = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	
	КоллекцияНастроек = JSON.ПрочитатьJSON(СтрокаJSON);
	Попытка
		Настройки.КОМ = КоллекцияНастроек["COMmodel"]; 
		Настройки.Сервер = КоллекцияНастроек["Server1c"];
		Настройки.Юзер= КоллекцияНастроек["user1c"];
		Настройки.Пароль = КоллекцияНастроек["passwd1c"];
	Исключение
			Инфо = ИнформацияОбОшибке();

		Сообщить("Не удалось прочитать все настройки из файла настроек:"+Символы.ПС+КраткоеПредставлениеОшибки(Инфо));
		Справка(8);
	КонецПопытки;

КонецПроцедуры

Процедура Инициализировать()
	Настройки = Новый Структура("Выгрузка, КОМ, ИБ, Сервер, Юзер, Пароль");
	ПрочитатьНастройки();
	
	Скрипт = Новый Файл(ТекущийСценарий().Источник);
	СИ = Новый СистемнаяИнформация;
	Сообщить("Версия 1Scr: "+СИ.Версия+"   -----[ "+Скрипт.ИмяБезРасширения+" ]------    "+Версия);

	Если АргументыКоманднойСтроки.Количество() > 0 Тогда
		Если АргументыКоманднойСтроки.Количество() = 2 Тогда
			Настройки.ИБ = АргументыКоманднойСтроки[1];
		КонецЕсли;
		Если Врег(АргументыКоманднойСтроки[0]) = "CLEAN" Тогда
			ОчиститьВсе();
		ИначеЕсли Врег(АргументыКоманднойСтроки[0]) = "UNLOAD" Тогда
			Настройки.Выгрузка= Истина;
		ИначеЕсли Врег(АргументыКоманднойСтроки[0]) = "LOAD" Тогда
			Настройки.Выгрузка= Ложь;
		Иначе
			Справка(1);
		КонецЕсли;
	Иначе
		Справка(2);
	КонецЕсли;
	
КонецПроцедуры

Процедура Справка(к=9)

	Сообщить("
|	Выгрузка/загрузка файлов из справочника Внешние обработки
|
|	Требуются параметры ""clean"" | ""unload"" или ""load"" и имя ИБ
| 	Общие настройки хранятся в json файле ..\GSettings.js
|	");
	Exit(к);
КонецПроцедуры

Процедура Выполнить()
	Если Настройки.Выгрузка Тогда
		ВыгрузитьСправочник();
	Иначе
		ЗагрузитьСправочник();
	КонецЕсли;
		
КонецПроцедуры

Процедура ОчиститьВсе()
	Сообщить("очистка рабочих каталогов");
	списокКаталогов = Новый Массив;
	списокКаталогов.Добавить("reps");
	списокКаталогов.Добавить("in");
	списокКаталогов.Добавить("out");
	списокКаталогов.Добавить("ok");
	Для Каждого кк Из списокКаталогов Цикл
		Сообщить(""+кк+Символы.Таб+" ~~~~~~~~~~~~~~~~~~~~~~~~");
		мФайлы = НайтиФайлы(кк);
		Для Каждого фф Из мФайлы Цикл
			Сообщить("   "+фф.Name+"");
			УдалитьФайлы(фф.FullName);
		КонецЦикла;
	КонецЦикла;
	Exit(0);
КонецПроцедуры

Процедура ВыгрузитьСправочник()
	Ком = ПолучитьСоединениеСИБ();
	ВыборкаИзСправочника = Ком.Справочники.ВнешниеОбработки.ВыбратьИерархически();
	Каталог = Скрипт.Путь+"reps\"+Настройки.ИБ+"\";
	СоздатьКаталог(Каталог);
	ТекКаталог = Каталог;
	ИмяФайла = "";

Пока ВыборкаИзСправочника.Следующий() Цикл
	Ссылка = ВыборкаИзСправочника.Ссылка;
	Если Ссылка.ПометкаУдаления Тогда
		Продолжить;
	КонецЕсли;
	
	Если Ссылка.ЭтоГруппа Тогда
//		ПК = Ссылка.ПолныйКод();
//		ТекКаталог = Каталог+СтрЗаменить(ПК, "/", "\")+"#"+СокрЛП(Ссылка.Наименование)+"\";
//		СоздатьКаталог(ТекКаталог);
		Продолжить;
	Иначе
		СсылкаНаОбработкуОтчет = Ссылка;
	КонецЕсли;
	ИмяФайлаОбработкиОтчета = "";
	Попытка
		ИмяФайлаОбработкиОтчета = СсылкаНаОбработкуОтчет.КомментарийКФайлуИсточнику;
		ИмяФайлаОбработкиОтчета = СокрЛП(СтрЗаменить(СтрПолучитьСтроку(ИмяФайлаОбработкиОтчета, 1),"Исходный файл:",""));
	Исключение
		Сообщить("!!! Не удалось получить имя файла !!! из строки:"+Символы.ПС+СсылкаНаОбработкуОтчет.КомментарийКФайлуИсточнику);
	КонецПопытки;
	
	Если ПустаяСтрока(ИмяФайлаОбработкиОтчета) Тогда
		Если СсылкаНаОбработкуОтчет.ВидОбработки = Ком.Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
			ИмяФайлаОбработкиОтчета = ПолучитьИмяВременногоФайла("erf");
		Иначе
			ИмяФайлаОбработкиОтчета = ПолучитьИмяВременногоФайла("epf");
		КонецЕсли;
	КонецЕсли;
	
	Хранилище = СсылкаНаОбработкуОтчет.ХранилищеВнешнейОбработки.Получить();
	Если Хранилище <> Неопределено Тогда
		Сообщить(ТекКаталог+ИмяФайлаОбработкиОтчета);
		Хранилище.Записать(ТекКаталог+СсылкаНаОбработкуОтчет.Код+"#"+ИмяФайлаОбработкиОтчета);
	КонецЕсли;
КонецЦикла;

	КОМСпр = КОМ.Справочники.ВнешниеОбработки;
	Ком = Неопределено;
КонецПроцедуры

Функция ПолучитьСоединениеСИБ()
 КОбъект =  Новый COMОбъект(Настройки.КОМ);
 СтрокаСоединения = "Srvr="""+Настройки.Сервер+""";Ref="+Настройки.ИБ+";Usr="""+Настройки.Юзер+""";Pwd="""+Настройки.Пароль+""";";
 
	Попытка
		Возврат КОбъект.Connect(СтрокаСоединения);
	Исключение
		Инфо = ИнформацияОбОшибке();
		ВывестиОшибку(Инфо);
		Сообщить("Не удалось соединиться с ИБ ["+Настройки.КОМ+"]"+Настройки.ИБ+Символы.ПС+ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

Процедура ЗагрузитьСправочник()
	Ком = ПолучитьСоединениеСИБ();
	мнгр = Ком.Справочники.ВнешниеОбработки;
//	ВыборкаИзСправочника = Ком.Справочники.ВнешниеОбработки.ВыбратьИерархически();
	Каталог = Скрипт.Путь+"ok\"+Настройки.ИБ+"\";
	мФайлы = НайтиФайлы(Каталог);
	Для Каждого фф Из мФайлы Цикл
		мСсылка = мнгр.НайтиПоКоду(Лев(фф.Имя, 9));
Сообщить(Лев(фф.Имя, 9) + " " + мСсылка.Наименование);
		Если мСсылка.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		ВО = мСсылка.ПолучитьОбъект();
		дд = Ком.NewObject("ДвоичныеДанные", фф.ПолноеИмя);
		хз = Ком.NewObject("ХранилищеЗначения", дд);
		ВО.ХранилищеВнешнейОбработки = хз;	
		ИмяФайла = Сред(фф.Имя, Найти(фф.Имя, "#")+1);

		ВО.КомментарийКФайлуИсточнику = "Исходный файл: "+ ИмяФайла + Символы.ПС + "размер:" + фф.Размер()+" байт; изменен:" + фф.ПолучитьВремяИзменения() + "; сохранен в ИБ:" + ТекущаяДата()+ "  (массовая загрузка)";
		Попытка
			ВО.Записать();	
		Исключение
			ВывестиОшибку(ИнформацияОбОшибке());
		КонецПопытки;
	КонецЦикла;
	

КонецПроцедуры

Процедура ВывестиОшибку(Инфо)

	Пока Инфо <> Неопределено Цикл 
		Если Инфо.Причина <> Неопределено Тогда 
			Сообщить(Инфо.Причина.Описание); 
		КонецЕсли; 
		Инфо = Инфо.Причина; 
	КонецЦикла;
КонецПроцедуры

//////////////////////////////
Версия = "1.2.4 vscraft@2015";
Инициализировать();
Выполнить();

// содержание файла GSettings.js:
//{
//"Server1c": "адр01;адр02",
//"user1c": "юзер",
//"passwd1c": "пароль",
//"COMmodel": "V83.ComConnector"
//}
//
