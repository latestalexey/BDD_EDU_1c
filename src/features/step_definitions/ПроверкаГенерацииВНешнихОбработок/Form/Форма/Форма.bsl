//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"​​У​​Меня​​Есть​Feature​Файл()","​​У​​Меня​​Есть​Feature​Файл","Допустим​  ​ у​  ​ меня​  ​ есть​  feature ​ файл");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"​​У​​Меня​​Есть​​Инструмент​Vanessa​­​Behavior()","​​У​​Меня​​Есть​​Инструмент​Vanessa​­​Behavior","И​  ​ у​  ​ меня​  ​ есть​  ​ инструмент​  vanessa​ ­​ behavior");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"​​Я​​В​Vanessa​­​Behavior​Запускаю​​Генерацию​​Внешней​​Обработки()","​​Я​​В​Vanessa​­​Behavior​Запускаю​​Генерацию​​Внешней​​Обработки","Когда​  ​ я​  ​ в​  vanessa​ ­​ behavior ​ запускаю​  ​ генерацию​  ​ внешней​  ​ обработки");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"​​Рядом​​С​Feature​Файлом​​Создается​​Каталог​​А​​В​​Нем​​Внешняя​​Обработка()","​​Рядом​​С​Feature​Файлом​​Создается​​Каталог​​А​​В​​Нем​​Внешняя​​Обработка","Тогда​  ​ рядом​  ​ с​  feature ​ файлом​  ​ создается​  ​ каталог​  ​ а​  ​ в​  ​ нем​  ​ внешняя​  ​ обработка");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим​  ​ у​  ​ меня​  ​ есть​  feature ​ файл
//@​​У​​Меня​​Есть​Feature​Файл()
Процедура ​​У​​Меня​​Есть​Feature​Файл() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И​  ​ у​  ​ меня​  ​ есть​  ​ инструмент​  vanessa​ ­​ behavior
//@​​У​​Меня​​Есть​​Инструмент​Vanessa​­​Behavior()
Процедура ​​У​​Меня​​Есть​​Инструмент​Vanessa​­​Behavior() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда​  ​ я​  ​ в​  vanessa​ ­​ behavior ​ запускаю​  ​ генерацию​  ​ внешней​  ​ обработки
//@​​Я​​В​Vanessa​­​Behavior​Запускаю​​Генерацию​​Внешней​​Обработки()
Процедура ​​Я​​В​Vanessa​­​Behavior​Запускаю​​Генерацию​​Внешней​​Обработки() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда​  ​ рядом​  ​ с​  feature ​ файлом​  ​ создается​  ​ каталог​  ​ а​  ​ в​  ​ нем​  ​ внешняя​  ​ обработка
//@​​Рядом​​С​Feature​Файлом​​Создается​​Каталог​​А​​В​​Нем​​Внешняя​​Обработка()
Процедура ​​Рядом​​С​Feature​Файлом​​Создается​​Каталог​​А​​В​​Нем​​Внешняя​​Обработка() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля